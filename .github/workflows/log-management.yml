# ðŸŽ¯ SIMON'S LOG-MANAGEMENT WORKFLOW
# Verhindert veraltete Datenanalysen durch automatische Log-Rotation

name: Build Checker Log Management

on:
  schedule:
    # ALLE 5 MINUTEN prÃ¼fen und archivieren
    - cron: "*/5 * * * *"
  workflow_dispatch: # Manueller Trigger
  push:
    paths:
      - "src/**"
      - "public/**"
      - "*.astro"
      - "*.css"

jobs:
  log-rotation:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Archive alte Logs (5-MINUTEN-REGEL)
        run: |
          cd tools/build_check/logfiles

          # Erstelle Archiv-Verzeichnis falls nicht vorhanden
          mkdir -p archive/$(date +%Y-%m-%d)

          # SIMON'S 5-MINUTEN-REGEL: Verschiebe ALL Logs Ã¤lter als 5 Minuten
          find . -name "simon-build-checker-*.md" -mmin +5 -exec mv {} archive/$(date +%Y-%m-%d)/ \;

          # ZusÃ¤tzlich: LÃ¶sche auch Symlinks bei veralteten Logs
          if [ -L "current-build-log.md" ]; then
            if [ ! -e "current-build-log.md" ]; then
              rm current-build-log.md
            fi
          fi

          # PrÃ¼fe ob Ã¼berhaupt noch aktuelle Logs vorhanden
          CURRENT_LOGS=$(find . -name "simon-build-checker-*.md" -mmin -5 | wc -l)
          if [ "$CURRENT_LOGS" -eq 0 ]; then
            echo "ðŸš¨ KEINE AKTUELLEN LOGS - BUILD ERFORDERLICH!" > build-required.txt
          fi

      - name: Erstelle aktuellen Log-Symlink
        run: |
          cd tools/build_check/logfiles

          # Finde neueste Log-Datei
          LATEST_LOG=$(ls -t simon-build-checker-*.md | head -1)

          # Erstelle Symlink fÃ¼r "aktuellste" Datei
          ln -sf "$LATEST_LOG" current-build-log.md

      - name: Commit Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "ðŸ¤– Automatische Log-Rotation: $(date)" || exit 0
          git push
